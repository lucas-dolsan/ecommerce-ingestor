name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:  # This allows the workflow to be manually triggered

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      # - name: Start SonarQube
      #   run: docker-compose -f docker-compose.sonarqube.yml up -d

      # - name: Wait for SonarQube to be ready
      #   run: |
      #     echo "Waiting for SonarQube to start..."
      #     timeout 60 bash -c 'until curl -s http://localhost:9000; do echo .; sleep 5; done'

      # - name: Install Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'

      # - name: Install SonarQube Scanner CLI
      #   run: npm install sonarqube-scanner

      # - name: Run SonarQube Analysis
      #   run: |
      #     npx sonar-scanner \
      #       -Dsonar.projectKey=my_project \
      #       -Dsonar.sources=. \
      #       -Dsonar.host.url=http://localhost:9000 \
      #       -Dsonar.login=admin \
      #       -Dsonar.password=admin

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init and Apply
        run: |
          cd terraform
          terraform init -backend-config="key=${{ github.ref }}.tfstate"
          terraform workspace select ${{ github.ref }} || terraform workspace new ${{ github.ref }}
          terraform apply -auto-approve -var "environment=${{ github.ref }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: us-west-2
          TF_VAR_ami: ami-0c55b159cbfafe1f0
          TF_VAR_instance_type: t2.micro

      - name: Deploy with Docker Compose
        run: docker-compose up -d

  monitoring:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Prometheus and Grafana
        run: docker-compose -f docker-compose.monitoring.yml up -d
