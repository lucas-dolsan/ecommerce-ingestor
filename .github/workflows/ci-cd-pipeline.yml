name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      - name: Start SonarQube
        run: docker-compose -f docker-compose.sonarqube.yml up -d

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to start..."
          timeout 60 bash -c 'until curl -s http://localhost:9000; do echo .; sleep 5; done'

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my_project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=admin

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init and Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
        env:
          TF_VAR_environment: ${{ github.ref }}

      - name: Deploy with Docker Compose
        run: docker-compose up -d

  monitoring:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Prometheus and Grafana
        run: docker-compose -f docker-compose.monitoring.yml up -d
